env:
  global:
  - secure: "mAKqsfksFjBmvtjVEUiUkJ1rG7pp4dGZrTez2SRoEu+bEDh620O931SwBYyWMAdKRNGt9zrV22EASXM9ug1AHboFTOnMM17YCLw/nbioV92EIYV7O+infO9dkGpn0wDVa/jPIiJB++5xeeIF8Lgq7td6wP4jE8WMl97PL5wtEMs="
language: cpp
compiler:
- clang
- gcc
os: linux
dist: trusty
sudo: required
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'gcc-5']
      env: COMPILER_CXX=g++-5 COMPILER_C=gcc-5
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'gcc-6']
      env: COMPILER_CXX=g++-6 COMPILER_C=gcc-6
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.8']
          packages: ['clang-3.8']
      env: COMPILER_CXX=clang++-3.8 COMPILER_C=clang-3.8
    - os: linux
      compiler: gcc
      env: COVERAGE=yes CONFIGURE_ARGS="--enable-coverage --disable-shared" USBGUARD_TESTS_VALGRIND=off
    - os: linux
      compiler: gcc
      env: MAKE_ARGS="distcheck DISTCHECK_CONFIGURE_FLAGS+=--with-bundled-pegtl DISTCHECK_CONFIGURE_FLAGS+=--with-bundled-catch"
    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['clang']
      env: MAKE_ARGS=analyze-clang
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'gcc-6']
      env: COMPILER_CXX=g++-6 COMPILER_C=gcc-6 CONFIGURE_ARGS=--enable-asan USBGUARD_TESTS_VALGRIND=off
    - os: linux
      compiler: gcc
      env: CONFIGURE_ARGS=--enable-debug-build
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['libgcrypt-dev']
      env: CONFIGURE_ARGS=--with-crypto-library=gcrypt
    -os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['slapd', 'ldap-utils']
      env: CONFIGURE_ARGS=--with-ldap
    -os: linux
      compiler: clang
      addons:
        apt:
          packages: ['slapd', 'ldap-utils']
      env: CONFIGURE_ARGS=--with-ldap
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['qtbase5-dev', 'qt5-default', 'qtbase5-dev-tools', 'libqt5svg5-dev', 'qttools5-dev-tools']
      env: CONFIGURE_ARGS=--with-gui-qt=qt5
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['libqt4-dev', 'qt4-default', 'qt4-dev-tools', 'libqt4-svg']
      env: CONFIGURE_ARGS=--with-gui-qt=qt4
before_install:
- sudo add-apt-repository -y ppa:chris-lea/libsodium
- sudo apt-get -qq update
- sudo apt-get install -y libudev-dev libsodium-dev libqb-dev libcap-ng-dev libseccomp-dev
- sudo apt-get install -y libglib2.0-dev libdbus-glib-1-dev libxml2-utils libpolkit-gobject-1-dev xsltproc
- sudo apt-get install -y lcov
- sudo apt-get install -y aspell aspell-en
- sudo apt-get install -y libprotobuf-dev protobuf-compiler
- sudo apt-get install -y valgrind
- sudo gem install asciidoctor
- sudo gem install coveralls-lcov
- curl -JLo /tmp/astyle.tgz --remote-header-name 'https://netix.dl.sourceforge.net/project/astyle/astyle/astyle%203.0.1/astyle_3.0.1_linux.tar.gz'
install:
- pushd .
- cd /tmp
- tar zxvf astyle.tgz
- cd astyle/build/gcc
- make && sudo make install
- popd
before_script:
- ./autogen.sh
- mkdir build && cd build
- CXX=${COMPILER_CXX:=$CXX} CC=${COMPILER_C:=$CC} ../configure --enable-werror --enable-full-test-suite --disable-silent-rules --with-bundled-catch --with-bundled-pegtl $CONFIGURE_ARGS
script:
- test $TRAVIS_BRANCH != coverity_scan || exit 0
- if test -n "$MAKE_ARGS"; then make $MAKE_ARGS; else make all; make check; fi
after_success:
- test "x$COVERAGE" = xyes -a "x$CXX" = "xg++" && lcov --compat-libtool --directory . --capture --output-file coverage.info && coveralls-lcov coverage.info
addons:
  coverity_scan:
    project:
      name: USBGuard/usbguard
    notification_email: dnk1618@gmail.com
    build_command: make
    branch_pattern: coverity_scan
